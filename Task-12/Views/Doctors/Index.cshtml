@model DoctorManagementSystem.Models.DoctorIndexViewModel
@{
    ViewData["Title"] = "Doctors";
}

<h2>Doctors</h2>

<form method="get" class="mb-3 row g-2">
    <div class="col-auto">
        <input name="searchName" value="@Model.SearchName" class="form-control" placeholder="Search by name" />
    </div>
    <div class="col-auto">
        <input name="specialization" value="@Model.Specialization" class="form-control" placeholder="Specialization" />
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<div class="row">
@foreach (var d in Model.Doctors)
{
    <div class="col-md-3 card m-2 p-2">
        <img src="~/images/doctors/@(d.PhotoPath ?? "placeholder.png")" style="width:100%;height:150px;object-fit:cover" />
        <h5>@d.FullName</h5>
        <p>@d.Specialization</p>
        <button class="btn btn-primary btn-book" data-id="@d.Id" data-name="@d.FullName">Book Appointment</button>
    </div>
}
</div>

<!-- Pagination -->
<div class="mt-3">
  @if(Model.Page > 1) { <a class="btn btn-outline-secondary" href="@Url.Action("Index", new { page = Model.Page - 1, searchName = Model.SearchName, specialization = Model.Specialization })">Previous</a> }
  <span class="mx-2">Page @Model.Page of @((Model.TotalItems + Model.PageSize - 1) / Model.PageSize)</span>
  @if(Model.Page * Model.PageSize < Model.TotalItems) { <a class="btn btn-outline-secondary" href="@Url.Action("Index", new { page = Model.Page + 1, searchName = Model.SearchName, specialization = Model.Specialization })">Next</a> }
</div>

<!-- Book Modal -->
<div id="bookModal" class="modal" tabindex="-1" style="display:none;">
  <div class="modal-dialog">
    <div class="modal-content p-3">
      <h5 id="modalTitle">Book Appointment</h5>
      <input type="hidden" id="doctorId" />
      <div class="form-group mb-2">
        <label>Patient Name</label>
        <input id="patientName" class="form-control" />
      </div>
      <div class="form-group mb-2">
        <label>Date</label>
        <input id="dateInput" type="date" class="form-control" />
        <small class="text-muted">Allowed: Sunday to Thursday</small>
      </div>
      <div class="form-group mb-2">
        <label>Time</label>
        <select id="timeSelect" class="form-control">
          <option>Select date first</option>
        </select>
      </div>
      <div class="text-end">
        <button id="completeBtn" class="btn btn-success">Complete Appointment</button>
        <button class="btn btn-secondary" id="cancelBtn">Cancel</button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
  $(function(){
    $('.btn-book').on('click', function(){
      var id = $(this).data('id'), name = $(this).data('name');
      $('#doctorId').val(id);
      $('#modalTitle').text('Book appointment for doctor: ' + name);
      $('#patientName').val('');
      $('#dateInput').val('');
      $('#timeSelect').html('<option>Select date first</option>');
      $('#bookModal').show();
    });

    $('#cancelBtn').on('click', function(){ $('#bookModal').hide(); });

    $('#dateInput').on('change', function(){
      var date = $(this).val();
      var doctorId = $('#doctorId').val();
      if(!date) return;
      var d = new Date(date);
      var dow = d.getDay(); // 0=Sun .. 6=Sat
      // In JS, Friday=5, Saturday=6 (but our requirement: block Friday & Saturday)
      if(dow === 5 || dow === 6){
        alert('Please select a day between Sunday and Thursday only.');
        $('#dateInput').val('');
        $('#timeSelect').html('<option>Select a valid date</option>');
        return;
      }

      fetch(`/Doctors/GetAvailableSlots?doctorId=${doctorId}&date=${date}`)
      .then(r=>r.json())
      .then(data=>{
        if(!data || data.length === 0){
          $('#timeSelect').html('<option>No available times</option>');
        } else {
          var opts = '';
          data.forEach(t => opts += `<option value="${t}">${t}</option>`);
          $('#timeSelect').html(opts);
        }
      });
    });

    $('#completeBtn').on('click', function(){
      var doctorId = parseInt($('#doctorId').val());
      var patientName = $('#patientName').val();
      var date = $('#dateInput').val();
      var time = $('#timeSelect').val();

      if(!patientName || !date || !time){
        alert('Please fill in all fields.');
        return;
      }

      fetch('/Doctors/Book', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ doctorId: doctorId, patientName: patientName, date: date, time: time})
      })
      .then(async res => {
        if(!res.ok) {
          const txt = await res.text();
          throw new Error(txt || 'Booking error');
        }
        return res.json();
      })
      .then(result => {
        alert(result.message || 'Appointment booked');
        $('#bookModal').hide();
      })
      .catch(err => alert(err.message || 'Booking failed'));
    });
  });
</script>
}
